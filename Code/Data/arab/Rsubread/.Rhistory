for (i in 1:nsim)
{
x <- rchisq(n, param[1]) # chi-square distribution with df of param[1]
y[i] <- mean(x)
}
}
if (dist == "gamma")
{
for (i in 1:nsim)
{
x <- rgamma(n, param[1], param[2]) # parameter 1 is shape, param2 is rate
y[i] <- mean(x)  # formula mean(x) = param[1]/param[2]
}                 # var(x) = param[1]/param[2]^2
}
if (dist == "binom")
{
for (i in 1:nsim)
{
x <- rbinom(n, param[1], param[2]) # param 1 is size, param 2 is prob
y[i] <- mean(x)
}
}
if (dist == "poisson"){
for (i in 1:nsim)
{
x <- rpois(n, param[1])
y[i] <- mean(x)
}
}
return(y)
}
y <- CLT("gamma", 30, c(2, 3), 500 )
y <- CLT("poisson", 50, 2, 1000)
hist(y, prob=TRUE, main="histogram of Poisson mean")
x<-seq(min(y),max(y),0.01)
curve(dnorm(x, mean=mean(y), sd=sd(y)), add=TRUE, lty=2, col="red")
dist <- "gamma"
y <- CLT(dist, 30, c(2, 3), 500 )
dist <- "gamma"
y <- CLT(dist, 30, c(2, 3), 500 )
hist(y, prob=TRUE, main=paste("histogram of", dist,  "mean")
hist(y, prob=TRUE, main=paste("histogram of", dist,  "mean"))
hist(y, prob=TRUE, main=paste("histogram of", dist,  "mean"))
x<-seq(min(y),max(y),0.01)
curve(dnorm(x, mean=mean(y), sd=sd(y)), add=TRUE, lty=2, col="red")
dist <- "binom"
n <- 30
param <- c(10, 0.3)
nsim <- 500
y <- CLT(dist, n, param, nsim )
# y <- CLT(dist, 50, 2, 1000)
hist(y, prob=TRUE, main=paste("histogram of", dist,  "mean"))
x<-seq(min(y),max(y),0.01)
curve(dnorm(x, mean=mean(y), sd=sd(y)), add=TRUE, lty=2, col="red")
rm(list=ls())
?rexp
dist <- "binom"
CLT <- function(dist="exp", n, param, nsim)
# n: number of samples
# param: corresponding parameters, can be a vector
# nsim: number of simulations
{
y <- rep(0, nsim) # initialization
if (dist== "exp"){  # for exponential distribution
for ( i in 1: nsim){
x <- rexp(n, param[1]) # generate exponential distributed number
y[i] <- mean(x)  # calculate the mean
}
}
if (dist == "chisq")
{
for (i in 1:nsim)
{
x <- rchisq(n, param[1]) # chi-square distribution with df of param[1]
y[i] <- mean(x)
}
}
if (dist == "gamma")
{
for (i in 1:nsim)
{
x <- rgamma(n, param[1], param[2]) # parameter 1 is shape, param2 is rate
y[i] <- mean(x)  # formula mean(x) = param[1]/param[2]
}                 # var(x) = param[1]/param[2]^2
}
if (dist == "binom")
{
for (i in 1:nsim)
{
x <- rbinom(n, param[1], param[2]) # param 1 is size, param 2 is prob
y[i] <- mean(x)
}
}
if (dist == "poisson"){
for (i in 1:nsim)
{
x <- rpois(n, param[1])
y[i] <- mean(x)
}
}
return(y)
}
dist <- "binom"
n <- 50
param <- c(20, 0.05)
nsim <- 10000
y <- CLT(dist, n, param, nsim )
head(y, 20)
20*0.05
hist(y, prob=TRUE, main=paste("histogram of", dist,  "mean"))
x<-seq(min(y),max(y),0.01)
curve(dnorm(x, mean=mean(y), sd=sd(y)), add=TRUE, lty=2, col="red")
x
?dnorm
mean(y)
sd(y)
dist <- "chisq"
n <- 5
param <- c(2)
nsim <- 10000
y <- CLT(dist, n, param, nsim )
hist(y, prob=TRUE, main=paste("histogram of", dist,  "mean"))
x<-seq(min(y),max(y),0.01)
curve(dnorm(x, mean=mean(y), sd=sd(y)), add=TRUE, lty=2, col="red")
x1 <- rchisq(1000, 2)
hist(x1)
mean(y)
x1 <- rpois(100, 3)
x2 <- rpois(100, 5)
x3 <- rpois(100, 4)
y <- x1 + x2 + x3
c(mean(y), var(y))
x <- runif(10000)
hist(x)
y <- runif(10000, 0, x)
hist(y)
c(mean(y), var(y))
x <- runif(10000)
y <- runif(10000, 0, x)
c(mean(y), var(y))
x <- runif(10000)
y <- runif(10000, 0, x)
c(mean(y), var(y))
x <- rnorm(100, 3, 1)
x <- rnorm(100, 3, 1)
y <- 0.3*x + 5
lm(y~x)
x <- seq(1:100)
x
y <- 0.3*x + 5 + rnorm(0, 5)
y
y <- 0.3*x + 5 + rnorm(100, 0, 5)
y
plot(x, y)
lm(y~x)
a <- lm(y~x)
abline(a)
summary(a)
300－（297.44-8.99）
300-(297.44-8.99)
x <- runif(100,1,100)
y <- 0.3*x + 5 + rnorm(100, 0, 5)
plot(x, y)
a <- lm(y~x)
summary(a)
abline(a)
x <- runif(10000)
y <- runif(10000, 0, x)
c(mean(y), var(y))
1/9
1/9-1/16
library(MASS)
fractions(1/9-1/16)
x <- runif(10000)
y <- runif(10000, 0, x)
c(mean(y), var(y))
x <- runif(10000)
y <- runif(10000, 0, x)
c(mean(y), var(y))
source( "http://www.bioconductor.org/biocLite.R" )
biocLite("BiocUpgrade")
biocLite( c("ShortRead","DESeq", "edgeR") )
biocLite("BiocUpgrade")
1-2*(1-pnorm(2))
32/63
18*0.9
GSE37159 <- read.table("/Users/Bin/Dropbox/Zhuo/Research/Project2014/Data/arab/GSE/GSE37159.txt",fill=T, header=T)
GSE37159.Rsubread <- read.table("/Users/Bin/Dropbox/Zhuo/Research/Project2014/Data/arab/RAW/GSE37159.Rsubread.txt",fill=T, header=T)
GSE37159.Rsubread <- read.table("/Users/Bin/Dropbox/Zhuo/Research/Project2014/Data/arab/Rsubread/GSE37159.Rsubread.txt",fill=T, header=T)
head(GSE37159)
head(GSE37159.Rsubread)
6400 －1950 －1780
6400 －1950 －1780
6400－1950 －1780
6400-1950-1780
1284 +2337
615=766
615=766
615+766
compareData <- function(dat1, dat2)
{
mer <- merge(dat1, dat2, by ="Gene")
nsamp <- dim(dat2)[2]-1
r.pearson <- r.spearman <- rep(0, nsamp)
coe1 <- coe2 <-  rep(0, nsamp)
for ( i in 1 :nsamp)
{
x <- mer[, i + 1]
y <- mer[, i + 1 + nsamp]
r.pearson[i] <- cor(x, y)
r.spearman[i] <- cor(x, y, method="spearman")
l <- lm(y~x)
coe1[i] <- as.numeric(l$coefficients[2]) # slope
coe2[i] <- as.numeric(l$coefficients[1])
# slope ranging from 1.05 to 1.06
}
ret.list <- list(mergeData= mer, r.pear= r.pearson,
r.spear = r.spearman, intercept=coe2, slope=coe1)
return(ret.list)
}
dat.name <- "GSE51772"
dat1.path <- paste("/Users/Bin/Dropbox/Zhuo/Research/Project2014/Data/arab/GSE/",
dat.name, ".txt", sep="")
head(dat1)
dat1 <- read.table(dat.path, fill=T, header=T)
head(dat1)
dat1 <- read.table(dat1.path, fill=T, header=T)
head(dat1)
dat2.path <- paste("/Users/Bin/Dropbox/Zhuo/Research/Project2014/Data/arab/Rsubread/",
dat.name, ".Rsubread.txt", sep="")
dat2 <- read.table(dat2.path, fill=T, header=T)
dat2 <- data.frame(Gene=row.names(dat2), dat2)
head(dat2)
xx <- compareData(dat1,dat2)
xx$slope
n <- 20000
N <- 20000
n <- 2000
K <- 100
k <- 100
choose(K, k)*choose(N-K, n-k)/choose(N, n)
choose(K, k)
choose(N-K, n-k)
1.1^15
1.2^14
rm(list=ls())
ls
80 + 15.53 + 15 + 2 + 32.27 +31.78 +5 +164 +24.95 +50.99
+ 13.17 + 16.48 + 17.40 +16.98 + 30 + 14.10 + 0.37 + 0.37 + 102.54
80 + 15.53 + 15 + 2 + 32.27 +31.78 +5 +164 +24.95 +50.99
+ 13.17 + 16.48 + 17.40 +16.98 + 30 + 14.10 + 0.37 + 0.37 + 102.54
80 + 15.53 + 15 + 2 + 32.27 +31.78 +5 +164 +24.95 +50.99 + 13.17 + 16.48 + 17.40 +16.98 + 30 + 14.10 + 0.37 + 0.37 + 102.54
20.76 + 12.66 +79.60 + 20.49 + 92.39 + 50.39 + 38 +  78.53
20.76 + 12.66 +79.60 + 20.49 + (92.39 + 50.39 )/2 + 38 +  78.53
(92.39 + 50.39 )/2
80 + 15.53 + 15 + 2 + 32.27 +31.78 +5 +164 +24.95 +50.99 + 13.17 + 16.48 + 17.40 +16.98 + 30 + 14.10 + 0.37 + 0.37 + 102.54
20.76 + 12.66 +79.60 + 20.49 + (92.39 + 50.39 )/2 + 38 +  78.53
(92.39 + 50.39 )/2
632.93/2
x <- 80 + 15.53 + 15 + 2 + 32.27 +31.78 +5 +164 +24.95 +50.99 + 13.17 + 16.48 + 17.40 +16.98 + 30 + 14.10 + 0.37 + 0.37 + 102.54
y <- 20.76 + 12.66 +79.60 + 20.49 + (92.39 + 50.39 )/2 + 38 +  78.53
z <- (92.39 + 50.39 )/2
f <- 10.68
x - (x + y)/2
y - ( x + y)/2
x - (x + y)/2 - z + f
y <- 20.76 + 12.66 +79.60 + 20.49 + (92.39 + 50.39 )/2 + 38 +  78.53
y
x-y
x-y+f
x/2
y/2
x/2-y/2
x/2-y/2+f
x/2-y/2+f-z
x/2-y/2+f-71.39
11548 - 1950 -1780-15
11548 - 1950 -1780-15-900
6903 -6000 + 247 -10000 + 8400 + 1200 - 315
350 - (39.92 + 54.99)/2 - 7.49*3
12074 -(5900 + 1700 + 1500)-1950 -1780
12074 -(5900 + 1700 + 1500)-1950 -1780 + 1174 + 256 + 200
12074 -(5900 + 1700 + 1500)-1950 -1780 + 1174 + 256 + 200 + 120 + 125 + 90
3930 + 1307 + 1305 + 615 + 766
3930 + 1307 + 1305 + 615 + 766-3930
6000-168
766 + 615 + 1305 + 3930
6616-5832
install.packages("GenomicFeatures")
library(GenomicFeatures)
source("http://bioconductor.org/biocLite.R")
biocLite("GenomicFeatures")
library(GenomicFeatures)
log(0.05)
install.packages("devtools")
library(Rsubread)
library(edgeR)
library(ggplot2)
library(reshape2)
library(lme4)
library(NBPSeq)
library(plyr)
library(devtools)
load_all("/Users/Bin/Dropbox/Zhuo/Research/Project2014/R/")
xdata <- ArrangeData(type="seedling")
280/7119
380/7119
380/5421
490 + 570
1060/13953
x <- c(0, 0.2, 0.6, 0.8, 0.98)
y <- x/(1-x)
z <- 1 + 3*y
x
y
z
4220 + 2720 - 4100 - 2400 - 1200
4220 + 2720 - 4100 - 2400 - 1100
1300 + 200 + 150 + 210 + 70 -660 + 270
1300 + 200 + 150 + 210 + 70 -660 + 270 + 100
1300 + 200 + 150 + 210 + 70 -660 + 270 + 100 + 60
230 ＋ 1050 ＋ 590＋ 630 ＋ 105
230＋ 1050 ＋ 590＋ 630 ＋ 105
230+ 1050+ 590+630 + 105
20000/6.13
x <- seq(1:10)
x
mean(x)
median(x)
length(x)
library(Rsubread)
sessionInfo()
590 + 1050 + 230 + 945 + 520 + 105
780 + 1700 + 375 + 430 + 1040  + 185
8850 + 3500 + 1200
9400 + 3600
550 - 400 -100
3620 + 10940
9300 + 3500 +1900
10e6
log(2)
log(5)
log(10)
library(stablegene)
library(NBPSeq)
setwd("/Users/Bin/Dropbox/Zhuo/Research/Project2014/Result")
leaf.var <- read.table("leaf_5lab_Rsubread.txt", header=T)
c(mean(leaf.var$lab), mean(leaf.var$trt), mean(leaf.var$individual))
c(median(leaf.var$lab), median(leaf.var$trt), median(leaf.var$individual))
seedling.var <- read.table("seedling_9lab_Rsubread.txt")
c(mean(seedling.var$lab), mean(seedling.var$trt), mean(seedling.var$individual))
c(median(seedling.var$lab), median(seedling.var$trt), median(seedling.var$individual))
range(leaf.var$individual)
id <- which(leaf.var$individual>10)
leaf.var[id,]
id <- which(leaf.var$individual>100)
leaf.var[id,]
id <- which(leaf.var$individual>300)
leaf.var[id,]
head(leaf[, 2:3])
setwd("/Users/Bin/Dropbox/Zhuo/Research/Project2014/Data/arab/Rsubread")
leaf <- read.table("leaf5lab.txt", header=T)
range(colSums(leaf)/10e6)
tissue <- read.table("tissue5lab.txt")
range(colSums(tissue)/10e6)
seedling <- read.table("seedling9lab.txt")
range(colSums(seedling)/10e6)
head(leaf[, 2:3])
leaf.new <- create.geneColumn(leaf)
ids <- which(leaf.new$Gene=="AT5G46890")
ids
dim(leaf)
dim(leaf.var)
leaf.new[ids,]
leaf.new[19391,]
setwd("/Users/Bin/Dropbox/Zhuo/Research/Project2014/Data/arab/Rsubread")
GSE36626 <- read.table("GSE36626.Rsubread.txt")
GSE36626 <- create.geneColumn(GSE36626)
trt.GSE36626 <- c(rep(1:2, 2))
GSE39463 <- read.table("GSE39463.Rsubread.txt")
GSE39463 <- GSE39463[, -c(3, 7, 9)]  # remove duplicated runs
GSE39463 <- create.geneColumn(GSE39463)
trt.GSE39463 <- c(rep(1:4, each= 3))
GSE48235 <- read.table("GSE48235.Rsubread.txt", header = T)
GSE48235 <- create.geneColumn(GSE48235)
trt.GSE48235 <- c(rep(1:3, each=2))
GSE51304 <- read.table("GSE51304.Rsubread.txt", header=T)
GSE51304 <- create.geneColumn(GSE51304)
trt.GSE51304 <- c(rep(1:9, each=2))
GSE54677 <- read.table("GSE54677.Rsubread.txt", header = T)
GSE54677 <- create.geneColumn(GSE54677)
trt.GSE54677 <- c(rep(1:10, 2))  ### be careful about the design structure
ls <- list(GSE36626, GSE39463, GSE48235, GSE51304, GSE54677)
stable <- join_all(ls, "Gene")
stable <- stable[complete.cases(stable),]
trt <- c(trt.GSE36626, trt.GSE39463, trt.GSE48235, trt.GSE51304, trt.GSE54677)
n.obs <- c(length(trt.GSE36626), length(trt.GSE39463), length(trt.GSE48235),
length(trt.GSE51304), length(trt.GSE54677))
group <- rep(1:length(ls), n.obs)
y <- as.numeric(leaf.new[ids, ])
y
y <- as.numeric(leaf.new[ids, -1])
y
groups <- as.factor(group)
treat <- as.factor(trt)
library(NBPSeq)
library(lme4)
library(plyr)
stable <- join_all(ls, "Gene")
stable <- stable[complete.cases(stable),]
#as.numeric(colSums(stable[, -1]))
row.names(stable) <- stable[, 1]
stable <- stable[, -1]
dim(stable)
stable <- as.matrix(data[rowSums(data)>=filter.factor*dim(data)[2], ])
library(NBPSeq)
library(lme4)
norm.factors <- estimate.norm.factors(stable)
# norm.factors <- estimate.norm.factors(stable, method=NULL)
nb.data <- prepare.nb.data(stable, norm.factors=norm.factors)
off.set <- as.numeric(nb.data$eff.lib.sizes)
norm.factors <- estimate.norm.factors(leaf)
dim(leaf)
nb.data <- prepare.nb.data(leaf, norm.factors=norm.factors)
off.set <- as.numeric(nb.data$eff.lib.sizes)
mod <- glmer(y ~ 1  + (1|group) + (1|group:trt) + (1|id),
offset=(log(off.set)),
control=glmerControl(optimizer="bobyqa",optCtrl = list(maxfun = 100000)),
family = poisson)
id <- 1:length(y)
mod <- glmer(y ~ 1  + (1|group) + (1|group:trt) + (1|id),
offset=(log(off.set)),
control=glmerControl(optimizer="bobyqa",optCtrl = list(maxfun = 100000)),
family = poisson)
summary(mod)
ids <- which(leaf.var$individual > 100)
head(leaf.var[ids,])
head(leaf[ids,])
trt
trt <- c(rep(1:2, 2), rep(1:4, each= 3),rep(1:3, each=2), rep(1:9, each=2),rep(1:10, 2))
trt
n.obs
group <- rep(1:dim(leaf)[2], n.obs)
dim(leaf)[2]
sum(n.obs)
group <- rep(1:dim(leaf)[2], n.obs)
group <- rep(1:(dim(leaf)[2]), n.obs)
group <- rep(1:5, n.obs)
group
y <- as.numeric(leaf[ids[1]], -1)
ids <- which(leaf.var$individual > 100)
ids[1]
y <- as.numeric(leaf[ids[1], -1)
y <- as.numeric(leaf[ids[1], -1])
y
groups <- as.factor(group)
treat <- as.factor(trt)
data <- leaf
stable <- as.matrix(data[rowSums(data)>=filter.factor*dim(data)[2], ])
filter.factor <- 3
stable <- as.matrix(data[rowSums(data)>=filter.factor*dim(data)[2], ])
library(NBPSeq)
library(lme4)
norm.factors <- estimate.norm.factors(stable)
# norm.factors <- estimate.norm.factors(stable, method=NULL)
nb.data <- prepare.nb.data(stable, norm.factors=norm.factors)
off.set <- as.numeric(nb.data$eff.lib.sizes)
mod <- glmer(y ~ 1  + (1|group) + (1|group:trt) + (1|id),
offset=(log(off.set)),
control=glmerControl(optimizer="bobyqa",optCtrl = list(maxfun = 100000)),
family = poisson)
library(lme4)
group
mod <- glmer(y ~ 1  + (1|group) + (1|group:trt) + (1|id),
offset=(log(off.set)),
control=glmerControl(optimizer="bobyqa",optCtrl = list(maxfun = 100000)),
family = poisson)
length(gropu)
length(group)
length(trt)
length(y)
y <- as.numeric(leaf[ids[1], ])
mod <- glmer(y ~ 1  + (1|group) + (1|group:trt) + (1|id),
offset=(log(off.set)),
control=glmerControl(optimizer="bobyqa",optCtrl = list(maxfun = 100000)),
family = poisson)
mod
summary(mod)
ids <- which(leaf.var$individual > 300)
head(leaf.var[ids,])
head(leaf[ids,])
trt <- c(rep(1:2, 2), rep(1:4, each= 3),rep(1:3, each=2), rep(1:9, each=2),rep(1:10, 2))
n.obs <- c(4, 12,  6, 18, 20)
group <- rep(1:5, n.obs)
y <- as.numeric(leaf[ids[1], ])
id <- 1:length(y)
data <- leaf
filter.factor <- 3
groups <- as.factor(group)
treat <- as.factor(trt)
stable <- as.matrix(data[rowSums(data)>=filter.factor*dim(data)[2], ])
library(NBPSeq)
library(lme4)
norm.factors <- estimate.norm.factors(stable)
# norm.factors <- estimate.norm.factors(stable, method=NULL)
nb.data <- prepare.nb.data(stable, norm.factors=norm.factors)
off.set <- as.numeric(nb.data$eff.lib.sizes)
mod <- glmer(y ~ 1  + (1|group) + (1|group:trt) + (1|id),
offset=(log(off.set)),
control=glmerControl(optimizer="bobyqa",optCtrl = list(maxfun = 100000)),
family = poisson)
summary(mod)
